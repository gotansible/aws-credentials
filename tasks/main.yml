---

- name: aws-credentials - ensure .aws/ folder exists
  file:
    state=directory
    path=/home/{{ aws_credentials_user }}/.aws
    owner={{ aws_credentials_user }}
    group={{ aws_credentials_group }}

- name: aws-credentials - set .aws/credentials key=access_key
  ini_file:
    dest: /home/{{ aws_credentials_user }}/.aws/credentials
    section: "{{ aws_credentials_section }}"
    option: aws_access_key_id
    value: "{{ aws_credentials_access_key if aws_credentials_access_key|length > 0 else lookup('ini','aws_access_key_id section=' + aws_credentials_profile|default('default') + ' file=~/.aws/credentials ') }}"
    backup: no
    owner: "{{ aws_credentials_user }}"
    group: "{{ aws_credentials_group }}"

- name: aws-credentials - set .aws/credentials values
  ini_file:
    dest: /home/{{ aws_credentials_user }}/.aws/credentials
    section: "{{ aws_credentials_section }}"
    option: aws_secret_access_key
    # only look up if the if the aws_credentials_access_key was provided, otherwise, the fact that this value is empty does not mean that we need to look it up
    # it's important to not change this, otherwise, it introduce a security hole
    value: "{{ aws_credentials_secret_access_key if aws_credentials_access_key|length > 0 else lookup('ini','aws_secret_access_key section=' + aws_credentials_profile|default('default') + ' file=~/.aws/credentials ') }}"
    backup: no
    owner: "{{ aws_credentials_user }}"
    group: "{{ aws_credentials_group }}"
